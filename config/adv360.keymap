
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define MACLOCK LG(LC(Q))
#define SPACE_RIGHT LC(RIGHT)
#define SPACE_LEFT LC(LEFT)
#define HYPER LS(LC(LA(LGUI)))

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    combos {
        compatible = "zmk,combos";
        combo_macLayer {
            timeout-ms = <200>;
            key-positions = <0 1>;
            bindings = <&to 0>;
        };
        combo_windowsLayer {
            timeout-ms = <200>;
            key-positions = <0 2>;
            bindings = <&to 4>;
        };
        combo_starcraftLayer {
            timeout-ms = <200>;
            key-positions = <0 3>;
            bindings = <&to 5>;
        };
        combo_fpsLayer {
            timeout-ms = <200>;
            key-positions = <0 4>;
            bindings = <&to 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
           &kp EQUAL          &kp N1                 &kp N2        &kp N3        &kp N4      &kp N5             &tog 1                                                                               &mo 3           &kp N6   &kp N7     &kp N8      &kp N9        &kp N0      &kp MINUS
           &kp TAB            &kp Q                  &kp W         &kp E         &kp R       &kp T              &none                                                                                &none           &kp Y    &kp U      &kp I       &kp O         &kp P       &kp BSLH
           &kp ESC            &kp A                  &kp S         &kp D         &kp F       &kp G              &kp RETURN  &kp LCTRL    &kp LALT                      &kp LGUI       &mo 3          &kp BACKSPACE   &kp H    &kp J      &kp K       &kp L         &kp SEMI    &kp SQT
           &kp LSHFT          &kp Z                  &kp X         &kp C         &kp V       &kp B              &none       &none        &kp HYPER   &none   &none     &kp PG_UP      &none          &none           &kp N    &kp M      &kp COMMA   &kp DOT       &kp FSLH    &kp RSHFT
           &kp RIGHT_CONTROL  &kp GRAVE     &macro_inspect_window  &kp LEFT_ALT  &kp SPACE                      &kp BSPC    &kp LCMD     &mo 1                         &kp LEFT_ALT   &kp ENTER      &kp SPACE                &kp UP     &kp DOWN    &kp LBKT      &kp RBKT    &sl 4
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_Windows {
            bindings = <
       &trans  &trans  &trans         &trans  &trans  &trans            &trans                                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
       &trans  &trans  &trans         &trans  &trans  &trans            &trans                                                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
       &trans  &trans  &trans         &trans  &trans  &trans            &trans            &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
       &trans  &trans  &trans         &trans  &trans  &trans            &trans            &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LEFT_ALT  &trans  &kp LS(LC(I))  &trans  &trans                    &trans  &kp LEFT_CONTROL  &trans                  &kp LEFT_CONTROL  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Starcraft {
            bindings = <
 &kp N6   &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS    &kp EQUAL                                                              &trans       &trans       &trans   &trans   &trans  &trans  &trans
 &kp Y    &kp U      &kp I      &kp O    &kp P     &kp LBKT     &kp RBKT                                                               &trans       &kp RETURN   &kp G    &kp L    &kp H   &kp F   &kp RETURN
 &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp APOS     &kp BSLH    &kp LEFT_CONTROL  &trans                   &trans  &trans  &trans       &kp RETURN   &kp G    &kp ESC  &kp W   &trans  &trans   
 &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp G        &none       &none             &trans   &none    &none  &trans  &none   &none        &trans       &trans   &trans   &trans  &trans  &trans
 &kp TAB  &kp GRAVE  &kp T      &kp V    &kp B                  &kp RSHFT   &kp LEFT_ALT      &trans                   &trans  &trans  &trans                    &trans   &trans   &trans  &trans  &to 0
            >;
        };

        layer_FPS {
            bindings = <
 &kp EQUAL          &kp EQUAL          &kp N1        &kp N2        &kp N3        &kp N4   &trans                                                           &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp TAB            &kp TAB            &kp Q         &kp W         &kp E         &kp R    &trans                                                           &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp ESC            &kp ESC            &kp A         &kp S         &kp D         &kp F    &trans     &trans      &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LSHFT          &kp LSHFT          &kp Z         &kp X         &kp C         &kp B    &trans     &trans      &trans  &none   &none     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp RIGHT_CONTROL  &kp RIGHT_CONTROL  &kp GRAVE     &kp ENTER     &kp LEFT_ALT           &kp LSHIFT &kp SPACE   &kp V                     &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Empty {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &none   &none   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
